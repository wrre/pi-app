# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := brig
DEFS_Debug := \
	'-DNODE_GYP_MODULE_NAME=brig' \
	'-DUSING_UV_SHARED=1' \
	'-DUSING_V8_SHARED=1' \
	'-DV8_DEPRECATION_WARNINGS=1' \
	'-D_DARWIN_USE_64_BIT_INODE=1' \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-D__MACOSX_CORE__' \
	'-DBUILDING_NODE_EXTENSION' \
	'-DDEBUG' \
	'-D_DEBUG' \
	'-DV8_ENABLE_CHECKS'

# Flags passed to all source files.
CFLAGS_Debug := \
	-O0 \
	-gdwarf-2 \
	-mmacosx-version-min=10.7 \
	-arch x86_64 \
	-Wall \
	-Wendif-labels \
	-W \
	-Wno-unused-parameter

# Flags passed to only C files.
CFLAGS_C_Debug := \
	-fno-strict-aliasing

# Flags passed to only C++ files.
CFLAGS_CC_Debug := \
	-std=gnu++0x \
	-stdlib=libc++ \
	-fno-rtti \
	-fno-threadsafe-statics \
	-stdlib=libc++ \
	-std=c++11 \
	-mmacosx-version-min=10.7 \
	-Wno-inconsistent-missing-override \
	-Woverloaded-virtual \
	-F/Users/fred/Qt/5.7/clang_64/lib

# Flags passed to only ObjC files.
CFLAGS_OBJC_Debug :=

# Flags passed to only ObjC++ files.
CFLAGS_OBJCC_Debug :=

INCS_Debug := \
	-I/Users/fred/.node-gyp/8.1.2/include/node \
	-I/Users/fred/.node-gyp/8.1.2/src \
	-I/Users/fred/.node-gyp/8.1.2/deps/uv/include \
	-I/Users/fred/.node-gyp/8.1.2/deps/v8/include \
	-I$(srcdir)/node_modules/nan \
	-I$(srcdir)/build/src \
	-I/Users/fred/Qt/5.7/clang_64/lib/QtGui.framework/Versions/Current/Headers \
	-I/Users/fred/Qt/5.7/clang_64/lib/QtCore.framework/Versions/Current/Headers \
	-I/Users/fred/Qt/5.7/clang_64/lib/QtQuick.framework/Versions/Current/Headers \
	-I/Users/fred/Qt/5.7/clang_64/lib/QtQml.framework/Versions/Current/Headers \
	-I/Users/fred/Qt/5.7/clang_64/lib/QtMultimedia.framework/Versions/Current/Headers \
	-I/Users/fred/Qt/5.7/clang_64/lib/QtWidgets.framework/Versions/Current/Headers \
	-I/Users/fred/Qt/5.7/clang_64/lib/QtQuickControls2.framework/Versions/Current/Headers

DEFS_Release := \
	'-DNODE_GYP_MODULE_NAME=brig' \
	'-DUSING_UV_SHARED=1' \
	'-DUSING_V8_SHARED=1' \
	'-DV8_DEPRECATION_WARNINGS=1' \
	'-D_DARWIN_USE_64_BIT_INODE=1' \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-D__MACOSX_CORE__' \
	'-DBUILDING_NODE_EXTENSION'

# Flags passed to all source files.
CFLAGS_Release := \
	-Os \
	-gdwarf-2 \
	-mmacosx-version-min=10.7 \
	-arch x86_64 \
	-Wall \
	-Wendif-labels \
	-W \
	-Wno-unused-parameter

# Flags passed to only C files.
CFLAGS_C_Release := \
	-fno-strict-aliasing

# Flags passed to only C++ files.
CFLAGS_CC_Release := \
	-std=gnu++0x \
	-stdlib=libc++ \
	-fno-rtti \
	-fno-threadsafe-statics \
	-stdlib=libc++ \
	-std=c++11 \
	-mmacosx-version-min=10.7 \
	-Wno-inconsistent-missing-override \
	-Woverloaded-virtual \
	-F/Users/fred/Qt/5.7/clang_64/lib

# Flags passed to only ObjC files.
CFLAGS_OBJC_Release :=

# Flags passed to only ObjC++ files.
CFLAGS_OBJCC_Release :=

INCS_Release := \
	-I/Users/fred/.node-gyp/8.1.2/include/node \
	-I/Users/fred/.node-gyp/8.1.2/src \
	-I/Users/fred/.node-gyp/8.1.2/deps/uv/include \
	-I/Users/fred/.node-gyp/8.1.2/deps/v8/include \
	-I$(srcdir)/node_modules/nan \
	-I$(srcdir)/build/src \
	-I/Users/fred/Qt/5.7/clang_64/lib/QtGui.framework/Versions/Current/Headers \
	-I/Users/fred/Qt/5.7/clang_64/lib/QtCore.framework/Versions/Current/Headers \
	-I/Users/fred/Qt/5.7/clang_64/lib/QtQuick.framework/Versions/Current/Headers \
	-I/Users/fred/Qt/5.7/clang_64/lib/QtQml.framework/Versions/Current/Headers \
	-I/Users/fred/Qt/5.7/clang_64/lib/QtMultimedia.framework/Versions/Current/Headers \
	-I/Users/fred/Qt/5.7/clang_64/lib/QtWidgets.framework/Versions/Current/Headers \
	-I/Users/fred/Qt/5.7/clang_64/lib/QtQuickControls2.framework/Versions/Current/Headers

OBJS := \
	$(obj).target/$(TARGET)/build/src/moc_eventdispatcher.o \
	$(obj).target/$(TARGET)/src/brig.o \
	$(obj).target/$(TARGET)/src/utils.o \
	$(obj).target/$(TARGET)/src/eventdispatcher/eventdispatcher.o \
	$(obj).target/$(TARGET)/src/QApplication.o \
	$(obj).target/$(TARGET)/src/callback.o \
	$(obj).target/$(TARGET)/src/signal_handler.o \
	$(obj).target/$(TARGET)/src/QmlEngine.o \
	$(obj).target/$(TARGET)/src/QmlComponent.o \
	$(obj).target/$(TARGET)/src/QmlContext.o \
	$(obj).target/$(TARGET)/src/QuickItem.o \
	$(obj).target/$(TARGET)/src/DynamicQMetaObjectBuilder.o \
	$(obj).target/$(TARGET)/src/DynamicQObject.o \
	$(obj).target/$(TARGET)/src/QmlTypeBuilder.o \
	$(obj).target/$(TARGET)/src/eventdispatcher/platform/mac.o

# Add to the list of files we specially track dependencies for.
all_deps += $(OBJS)

# CFLAGS et al overrides must be target-local.
# See "Target-specific Variable Values" in the GNU Make manual.
$(OBJS): TOOLSET := $(TOOLSET)
$(OBJS): GYP_CFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE))
$(OBJS): GYP_CXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE))
$(OBJS): GYP_OBJCFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE)) $(CFLAGS_OBJC_$(BUILDTYPE))
$(OBJS): GYP_OBJCXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE)) $(CFLAGS_OBJCC_$(BUILDTYPE))

# Suffix rules, putting all outputs into $(obj).

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.mm FORCE_DO_CMD
	@$(call do_cmd,objcxx,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# Try building from generated source, too.

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.mm FORCE_DO_CMD
	@$(call do_cmd,objcxx,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.mm FORCE_DO_CMD
	@$(call do_cmd,objcxx,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# End of this set of suffix rules
### Rules for final target.
LDFLAGS_Debug := \
	-undefined dynamic_lookup \
	-Wl,-no_pie \
	-Wl,-search_paths_first \
	-mmacosx-version-min=10.7 \
	-arch x86_64 \
	-L$(builddir) \
	-Wl,-rpath,@excutable_path/node_modules/qt-darwin/Frameworks \
	-Wl,-rpath,@loader_path/node_modules/qt-darwin/Frameworks \
	-Wl,-rpath,@excutable_path/../node_modules/qt-darwin/Frameworks \
	-Wl,-rpath,@loader_path/../node_modules/qt-darwin/Frameworks \
	-Wl,-rpath,@excutable_path/../../node_modules/qt-darwin/Frameworks \
	-Wl,-rpath,@loader_path/../../node_modules/qt-darwin/Frameworks \
	-stdlib=libc++

LIBTOOLFLAGS_Debug := \
	-undefined dynamic_lookup \
	-Wl,-no_pie \
	-Wl,-search_paths_first

LDFLAGS_Release := \
	-undefined dynamic_lookup \
	-Wl,-no_pie \
	-Wl,-search_paths_first \
	-mmacosx-version-min=10.7 \
	-arch x86_64 \
	-L$(builddir) \
	-Wl,-rpath,@excutable_path/node_modules/qt-darwin/Frameworks \
	-Wl,-rpath,@loader_path/node_modules/qt-darwin/Frameworks \
	-Wl,-rpath,@excutable_path/../node_modules/qt-darwin/Frameworks \
	-Wl,-rpath,@loader_path/../node_modules/qt-darwin/Frameworks \
	-Wl,-rpath,@excutable_path/../../node_modules/qt-darwin/Frameworks \
	-Wl,-rpath,@loader_path/../../node_modules/qt-darwin/Frameworks \
	-stdlib=libc++

LIBTOOLFLAGS_Release := \
	-undefined dynamic_lookup \
	-Wl,-no_pie \
	-Wl,-search_paths_first

LIBS := \
	-undefined dynamic_lookup \
	-F/Users/fred/Qt/5.7/clang_64/lib \
	-framework QtGui \
	-framework QtCore \
	-framework QtQuick \
	-framework QtQml \
	-framework QtMultimedia \
	-framework QtWidgets \
	-framework QtQuickControls2

/Users/fred/projects/brig/native/node-v57-darwin-x64/brig.node: GYP_LDFLAGS := $(LDFLAGS_$(BUILDTYPE))
/Users/fred/projects/brig/native/node-v57-darwin-x64/brig.node: LIBS := $(LIBS)
/Users/fred/projects/brig/native/node-v57-darwin-x64/brig.node: GYP_LIBTOOLFLAGS := $(LIBTOOLFLAGS_$(BUILDTYPE))
/Users/fred/projects/brig/native/node-v57-darwin-x64/brig.node: TOOLSET := $(TOOLSET)
/Users/fred/projects/brig/native/node-v57-darwin-x64/brig.node: $(OBJS) FORCE_DO_CMD
	$(call do_cmd,solink_module)

all_deps += /Users/fred/projects/brig/native/node-v57-darwin-x64/brig.node
# Add target alias
.PHONY: brig
brig: $(builddir)/brig.node

# Copy this to the executable output path.
$(builddir)/brig.node: TOOLSET := $(TOOLSET)
$(builddir)/brig.node: /Users/fred/projects/brig/native/node-v57-darwin-x64/brig.node FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += $(builddir)/brig.node
# Short alias for building this executable.
.PHONY: brig.node
brig.node: /Users/fred/projects/brig/native/node-v57-darwin-x64/brig.node $(builddir)/brig.node

# Add executable to "all" target.
.PHONY: all
all: $(builddir)/brig.node

